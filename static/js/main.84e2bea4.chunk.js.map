{"version":3,"sources":["components/task/task.styles.js","redux/features/tasks/taskSlice.js","components/task/task.js","components/tasklist/tasklist.style.js","components/tasklist/tasklist.js","components/addpanel/addpanel.styles.js","components/addpanel/addpanel.js","components/theme.js","App.js","redux/store.js","index.js"],"names":["EditIcon","styled","Fab","theme","palette","secondary","main","lighten","RemoveIcon","CardContainer","Card","primary","Title","Typography","ChipL","Chip","taskSlice","createSlice","name","initialState","taskIds","tasksById","reducers","addtask","state","action","push","payload","id","removetask","index","findIndex","splice","editTask","text","edit","actions","selectTasksIds","tasks","selectTaskNextId","length","Task","memo","props","dispatch","useDispatch","useSelector","todoId","created","tags","isComplete","useState","editText","setEditText","className","options","max","scale","perspective","variant","CardContent","color","gutterBottom","type","value","style","onChange","e","target","handleChange","map","tag","i","icon","marginLeft","key","label","size","deleteIcon","component","CardActions","justifyContent","onClick","CardList","div","breakpoints","down","to","useStyles","makeStyles","speedDial","position","bottom","spacing","right","zIndex","TaskList","todoTasksIds","classes","React","open","setOpen","handleClose","slice","reverse","Backdrop","SpeedDial","ariaLabel","SpeedDialIcon","onClose","onOpen","SpeedDialAction","Link","tooltipTitle","tooltipOpen","AddPanelContainer","Button","TextField","AddPanel","enqueueSnackbar","useSnackbar","console","log","setText","handleSubmit","preventDefault","Date","toLocaleDateString","history","onSubmit","createMuiTheme","common","purple","green","App","maxSnack","anchorOrigin","vertical","horizontal","exact","path","configureStore","reducer","taskReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.84e2bea4.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Typography } from '@material-ui/core';\r\nimport { lighten } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nexport const EditIcon = styled(Fab)`\r\n  ${({ theme }) => `\r\n   && {\r\n    background-color: ${theme.palette.secondary.main};\r\n    color: white;\r\n    transition: .2s ease-in-out transform;\r\n    &:hover{\r\n        background-color: ${lighten(theme.palette.secondary.main, 0.3)};\r\n        transform: translate(-2px,-2px);\r\n    }\r\n  }\r\n`}\r\n`;\r\nexport const RemoveIcon = styled(Fab)`\r\n  ${({ theme }) => `\r\n   && {\r\n    background-color: rgb(247, 73, 73);\r\n    color: white;\r\n    transition: .2s ease-in-out transform;\r\n    &:hover{\r\n        background-color: rgb(248, 117, 117);\r\n        transform: translate(-2px,-2px);\r\n    }\r\n  }\r\n`}\r\n`;\r\nexport const CardContainer = styled(Card)`\r\n  ${({ theme }) => `\r\n  &&{\r\n    padding: 30px;\r\n    color: white;\r\n    border-radius: 10px;\r\n    margin: 20px;\r\n    width: 400px;\r\n    input{\r\n      color: ${theme.palette.primary.main};\r\n      padding: 3px;\r\n      border: 2px solid ${theme.palette.primary.main};\r\n      margin-bottom: 3px;\r\n      &:focus{\r\n        border-radius: 0;\r\n        border: 2px solid ${theme.palette.primary.main};\r\n      }\r\n    }\r\n  }\r\n`}\r\n`;\r\n\r\nexport const Title = styled(Typography)`\r\n  ${({ theme }) => `\r\n  &&{\r\n    color: ${theme.palette.primary.main}\r\n  }\r\n`}\r\n`;\r\nexport const ChipL = styled(Chip)`\r\n  ${({ theme }) => `\r\n  &&{\r\n      margin: 3px;\r\n      margin-left:0;\r\n    color: ${lighten(theme.palette.primary.main, 0.3)};\r\n    border-color: ${lighten(theme.palette.primary.main, 0.3)};\r\n  }\r\n`}\r\n`;\r\n","import { createSlice} from '@reduxjs/toolkit';\r\n\r\nexport const taskSlice = createSlice({\r\n  name: 'tasks',\r\n  initialState: {\r\n    taskIds: [],\r\n    tasksById: {}\r\n  },\r\n  reducers: {\r\n    addtask: (state,action) => {\r\n      state.taskIds.push(action.payload.id);\r\n      state.tasksById[action.payload.id] = action.payload;\r\n    },\r\n    removetask:(state,action) => {\r\n      const index = state.taskIds.findIndex(state=>state === action.payload);\r\n      if(index !== -1) state.taskIds.splice(index,1);\r\n      delete state.tasksById[action.payload];\r\n    },\r\n    editTask: (state,action)=>{\r\n      const index = action.payload.id;\r\n      if(action.payload.text){state.tasksById[index].text = action.payload.text};\r\n      state.tasksById[index].edit = !state.tasksById[index].edit;\r\n    },\r\n  },\r\n});\r\nexport const { addtask,removetask,editTask } = taskSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\n// export const incrementAsync = amount => dispatch => {\r\n//   setTimeout(() => {\r\n//     dispatch(incrementByAmount(amount));\r\n//   }, 1000);\r\n// };\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\n// export const selectCount = state => state.counter.value;\r\nexport const selectTasksIds = state => state.tasks.taskIds;\r\nexport const selectTaskNextId = state => state.tasks.taskIds.length+1;\r\nexport const selectTasksByIds = state => state.tasks.tasksById;\r\n// export const selectTaskById = (state, props) => state.tasks.tasksById[props.id];\r\n\r\nexport default taskSlice.reducer;\r\n","import React, { useState, memo } from 'react';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tilt from 'react-tilt';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport { EditIcon, RemoveIcon, CardContainer, Title, ChipL } from './task.styles.js';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {removetask,editTask} from '../../redux/features/tasks/taskSlice';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nconst Task= memo((props)=>{\r\n  const dispatch = useDispatch();\r\n\r\n  const { id, text, created, tags, isComplete,edit } = useSelector(state=> state.tasks.tasksById[props.todoId]);\r\n  const [editText,setEditText] = useState(text);\r\n  if(!edit){\r\n  return (\r\n    <Tilt className='Tilt' options={{ max: 25, scale: 1, perspective: 900 }}>\r\n      <div className='Tilt-inner'>\r\n        <CardContainer variant='outlined'>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>\r\n              Stworzone: {created}\r\n            </Typography>\r\n            <Title variant='h5' component='h2'>\r\n              {text}\r\n            </Title>\r\n            {tags\r\n              ? tags.map((tag, i) => {\r\n                  let icon;\r\n                  if (tag === 'Work') icon = <WorkIcon style={{ marginLeft: '5px' }} />;\r\n                  else if (tag === 'Coding') icon = <CodeIcon style={{ marginLeft: '5px' }} />;\r\n                  else if (tag === 'Game') icon = <SportsEsportsIcon style={{ marginLeft: '5px' }} />;\r\n                  else if (tag === 'Workout') icon = <FitnessCenterIcon style={{ marginLeft: '5px' }} />;\r\n                  else if (tag === 'Payment') icon = <AccountBalanceWalletIcon style={{ marginLeft: '5px' }} />;\r\n                  return <ChipL key={i} label={tag} variant='outlined' color='primary' size='small' deleteIcon={<DoneIcon />} icon={icon} />;\r\n                })\r\n              : null}\r\n            <Typography variant='body2' component='p' style={{ color: 'lightgray' }}>\r\n              Ukończone: {isComplete ? 'Tak' : 'Nie'}\r\n              <br />\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions style={{ justifyContent: 'flex-end' }}>\r\n            <EditIcon size='medium' onClick={()=>dispatch(editTask({id}))} >\r\n              <EditOutlinedIcon />\r\n            </EditIcon>\r\n            <RemoveIcon size='medium' onClick={()=>dispatch(removetask(id))}>\r\n              <DeleteOutlineOutlinedIcon />\r\n            </RemoveIcon>\r\n          </CardActions>\r\n        </CardContainer>\r\n       </div>\r\n     </Tilt>\r\n  );}else{\r\n    const handleChange=(e)=>{\r\n      setEditText(e.target.value);\r\n    }\r\n    return (\r\n    <Tilt className='Tilt' options={{ max: 25, scale: 1, perspective: 900 }}>\r\n    <div className='Tilt-inner'>\r\n      <CardContainer variant='outlined'>\r\n        <CardContent>\r\n          <Typography color='textSecondary' gutterBottom>\r\n            Stworzone: {created}\r\n          </Typography>\r\n          {/* <Title variant='h5' component='h2'>\r\n            {text}\r\n          </Title> */}\r\n          <input type=\"text\" value={editText} style={{\"fontSize\": \"24px\"}} onChange={(e)=>handleChange(e)}/><br/>\r\n          {tags\r\n            ? tags.map((tag, i) => {\r\n                let icon;\r\n                if (tag === 'Work') icon = <WorkIcon style={{ marginLeft: '5px' }} />;\r\n                else if (tag === 'Coding') icon = <CodeIcon style={{ marginLeft: '5px' }} />;\r\n                else if (tag === 'Game') icon = <SportsEsportsIcon style={{ marginLeft: '5px' }} />;\r\n                else if (tag === 'Workout') icon = <FitnessCenterIcon style={{ marginLeft: '5px' }} />;\r\n                else if (tag === 'Payment') icon = <AccountBalanceWalletIcon style={{ marginLeft: '5px' }} />;\r\n                return <ChipL key={i} label={tag} variant='outlined' color='primary' size='small' deleteIcon={<DoneIcon />} icon={icon} />;\r\n              })\r\n            : null}\r\n          <Typography variant='body2' component='p' style={{ color: 'lightgray' }}>\r\n            Ukończone: {isComplete ? 'Tak' : 'Nie'}\r\n            <br />\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions style={{ justifyContent: 'flex-end' }}>\r\n          <EditIcon size='medium'onClick={()=>dispatch(editTask({id,text: editText}))}>\r\n            <CheckOutlinedIcon />\r\n          </EditIcon>\r\n          <RemoveIcon size='medium' onClick={()=>{\r\n            dispatch(editTask({id}));\r\n            setEditText(text);\r\n          }}>\r\n            <CloseOutlinedIcon />\r\n          </RemoveIcon>\r\n        </CardActions>\r\n      </CardContainer>\r\n     </div>\r\n   </Tilt>\r\n   );}\r\n});\r\n\r\nexport default Task;\r\n","import styled from 'styled-components';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const CardList = styled.div`\r\n  ${({ theme }) => `\r\n    padding: 50px;\r\n    width: 100% !important;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n\r\n  ${theme.breakpoints.down('md')} {\r\n    padding: 50px 10px;\r\n  }\r\n`}\r\n`;\r\nexport const Title = styled(Typography)`\r\n  && {\r\n    padding: 20px;\r\n    width: 100% !important;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 30px;\r\n    background-color: #661fc2;\r\n  }\r\n`;\r\n","import React, {memo} from 'react';\r\nimport Task from '../task/task';\r\nimport { CardList, Title } from './tasklist.style';\r\nimport { Link } from 'react-router-dom';\r\nimport './tasklist.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport { useSelector, } from 'react-redux';\r\nimport {selectTasksIds} from '../../redux/features/tasks/taskSlice';\r\n\r\n\r\nconst actions = [\r\n  {\r\n    icon: (\r\n      <Link to='/add'>\r\n        <FileCopyIcon />\r\n      </Link>\r\n    ),\r\n    name: 'Dodaj',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  speedDial: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(4),\r\n    zIndex: 5000,\r\n  },\r\n}));\r\n\r\nconst TaskList = memo(() => {\r\n  const todoTasksIds = useSelector(selectTasksIds);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Title>Lista zadań</Title>\r\n      <hr />\r\n      <CardList>\r\n\r\n          {todoTasksIds.length ? todoTasksIds.slice().reverse().map((id) => (\r\n            <Task key={id} todoId={id}/>\r\n          )): <h3 style={{\"fontWeight\": \"100\"}}>Brak aktywnych zadań :)</h3>}\r\n      </CardList>\r\n      <Backdrop open={open} />\r\n      <SpeedDial\r\n        ariaLabel='SpeedDial tooltip example'\r\n        className={classes.speedDial}\r\n        icon={<SpeedDialIcon />}\r\n        onClose={handleClose}\r\n        onOpen={handleOpen}\r\n        open={open}>\r\n        {actions.map((action) => (\r\n          <SpeedDialAction\r\n            component={Link}\r\n            to='/todo/add'\r\n            key={action.name}\r\n            icon={action.icon}\r\n            tooltipTitle={action.name}\r\n            tooltipOpen\r\n            onClick={handleClose}\r\n          />\r\n        ))}\r\n      </SpeedDial>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default TaskList;\r\n","import styled from 'styled-components';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport const AddPanelContainer = styled.div`\r\n  min-height: 500px;\r\n  max-width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nexport const ButtonW = styled(Button)`\r\n  /* width: 100px;\r\n  margin-left: 5px;\r\n  margin-top: 15px; */\r\n`;\r\nexport const Title = styled(TextField)`\r\n  & .MuiInputLabel-root {\r\n    color: #9966ff;\r\n    font-size: 25px;\r\n    text-align: center;\r\n    display: flex;\r\n  }\r\n  & .MuiFormLabel-root.Mui-focused{\r\n      color: #9966ff!important;\r\n  }\r\n  & .MuiInput-root {\r\n    color: #eee;\r\n    width: 300px;\r\n    font-size: 25px;\r\n  }\r\n  & .MuiInput-underline {\r\n    border-bottom: 1px solid white;\r\n  }\r\n  & .MuiInput-underline::before {\r\n    border-bottom: 1px solid white;\r\n  }\r\n  & .MuiInput-underline:after {\r\n    border-bottom: 1px solid white;\r\n  }\r\n  & .Mui-focused {\r\n    color: #fff;\r\n  }\r\n`;\r\n","import React, {useState} from 'react';\r\nimport { AddPanelContainer, Title } from './addpanel.styles';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport {addtask,selectTaskNextId} from '../../redux/features/tasks/taskSlice';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst AddPanel = (props) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\nconsole.log(props);\r\n  const snack2 = () => {\r\n    enqueueSnackbar('Dodano pomyślnie zadanie',{variant: \"success\"});\r\n};\r\n\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState('');\r\n  const id = useSelector(selectTaskNextId);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addtask({ id, text, created: new Date().toLocaleDateString(), tags: ['Work', 'Coding', 'Game'], isComplete: false }));\r\n    snack2();\r\n    setText('');\r\n    props.history.push(\"/todo/\");\r\n  };\r\n  return (\r\n    <AddPanelContainer>\r\n      <form onSubmit={(e)=>handleSubmit(e)}>\r\n        <Title id='standard-basic' label='Dodaj zadanie' onChange={(e) => setText(e.target.value)} value={text} />\r\n      </form>\r\n    </AddPanelContainer>\r\n  );\r\n};\r\n\r\nexport default AddPanel;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst purple = '#320a66';\r\nconst green = '#10e055';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    common: {\r\n      purple: `${purple}`,\r\n      green: `${green}`,\r\n    },\r\n    primary: {\r\n      main: `${purple}`,\r\n    },\r\n    secondary: {\r\n      main: `${green}`,\r\n    },\r\n  },\r\n});\r\n","import React from 'react';\r\nimport './App.css';\r\nimport TaskList from './components/tasklist/tasklist';\r\nimport AddPanel from './components/addpanel/addpanel';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport theme from './components/theme';\r\nimport { Route } from 'react-router-dom';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <SnackbarProvider maxSnack={3}    anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n    }}> \r\n         <Route exact path='/todo/add' component={AddPanel} />\r\n         <TaskList />\r\n         </SnackbarProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\r\nimport taskReducer from './features/tasks/taskSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    tasks: taskReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}